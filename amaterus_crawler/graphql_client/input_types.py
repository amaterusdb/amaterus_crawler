# Generated by ariadne-codegen
# Source: schema.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    cursor_ordering,
    order_by,
    youtube_channels_constraint,
    youtube_channels_update_column,
)


class Boolean_comparison_exp(BaseModel):
    eq: Optional[bool] = Field(alias="_eq", default=None)
    gt: Optional[bool] = Field(alias="_gt", default=None)
    gte: Optional[bool] = Field(alias="_gte", default=None)
    in_: Optional[List[bool]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[bool] = Field(alias="_lt", default=None)
    lte: Optional[bool] = Field(alias="_lte", default=None)
    neq: Optional[bool] = Field(alias="_neq", default=None)
    nin: Optional[List[bool]] = Field(alias="_nin", default=None)


class Int_comparison_exp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class String_comparison_exp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class timestamptz_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class uuid_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class youtube_channel_details_bool_exp(BaseModel):
    and_: Optional[List["youtube_channel_details_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["youtube_channel_details_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["youtube_channel_details_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_url: Optional["String_comparison_exp"] = None
    description: Optional["String_comparison_exp"] = None
    fetched_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    privacy_status: Optional["String_comparison_exp"] = None
    published_at: Optional["timestamptz_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel_id: Optional["uuid_comparison_exp"] = None


class youtube_channel_details_order_by(BaseModel):
    created_at: Optional[order_by] = None
    custom_url: Optional[order_by] = None
    description: Optional[order_by] = None
    fetched_at: Optional[order_by] = None
    id: Optional[order_by] = None
    privacy_status: Optional[order_by] = None
    published_at: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_channel_details_stream_cursor_input(BaseModel):
    initial_value: "youtube_channel_details_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_channel_details_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    custom_url: Optional[str] = None
    description: Optional[str] = None
    fetched_at: Optional[Any] = None
    id: Optional[Any] = None
    privacy_status: Optional[str] = None
    published_at: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    youtube_channel_id: Optional[Any] = None


class youtube_channel_thumbnail_objects_bool_exp(BaseModel):
    and_: Optional[List["youtube_channel_thumbnail_objects_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["youtube_channel_thumbnail_objects_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["youtube_channel_thumbnail_objects_bool_exp"]] = Field(
        alias="_or", default=None
    )
    content_type: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    fetched_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    object_key: Optional["String_comparison_exp"] = None
    object_size: Optional["Int_comparison_exp"] = None
    sha_256_digest: Optional["String_comparison_exp"] = Field(
        alias="sha256_digest", default=None
    )
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel_thumbnail_id: Optional["uuid_comparison_exp"] = None


class youtube_channel_thumbnail_objects_order_by(BaseModel):
    content_type: Optional[order_by] = None
    created_at: Optional[order_by] = None
    fetched_at: Optional[order_by] = None
    id: Optional[order_by] = None
    object_key: Optional[order_by] = None
    object_size: Optional[order_by] = None
    sha_256_digest: Optional[order_by] = Field(alias="sha256_digest", default=None)
    updated_at: Optional[order_by] = None
    youtube_channel_thumbnail_id: Optional[order_by] = None


class youtube_channel_thumbnail_objects_stream_cursor_input(BaseModel):
    initial_value: "youtube_channel_thumbnail_objects_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_channel_thumbnail_objects_stream_cursor_value_input(BaseModel):
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    fetched_at: Optional[Any] = None
    id: Optional[Any] = None
    object_key: Optional[str] = None
    object_size: Optional[int] = None
    sha_256_digest: Optional[str] = Field(alias="sha256_digest", default=None)
    updated_at: Optional[Any] = None
    youtube_channel_thumbnail_id: Optional[Any] = None


class youtube_channel_thumbnails_bool_exp(BaseModel):
    and_: Optional[List["youtube_channel_thumbnails_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["youtube_channel_thumbnails_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["youtube_channel_thumbnails_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    fetched_at: Optional["timestamptz_comparison_exp"] = None
    height: Optional["Int_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    key: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None
    width: Optional["Int_comparison_exp"] = None
    youtube_channel_id: Optional["uuid_comparison_exp"] = None


class youtube_channel_thumbnails_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fetched_at: Optional[order_by] = None
    height: Optional[order_by] = None
    id: Optional[order_by] = None
    key: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None
    width: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_channel_thumbnails_stream_cursor_input(BaseModel):
    initial_value: "youtube_channel_thumbnails_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_channel_thumbnails_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    fetched_at: Optional[Any] = None
    height: Optional[int] = None
    id: Optional[Any] = None
    key: Optional[str] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    width: Optional[int] = None
    youtube_channel_id: Optional[Any] = None


class youtube_channels_bool_exp(BaseModel):
    and_: Optional[List["youtube_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["youtube_channels_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["youtube_channels_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    enabled: Optional["Boolean_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    last_fetched_at: Optional["timestamptz_comparison_exp"] = None
    registered_at: Optional["timestamptz_comparison_exp"] = None
    remote_youtube_channel_id: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class youtube_channels_insert_input(BaseModel):
    enabled: Optional[bool] = None
    last_fetched_at: Optional[Any] = None
    registered_at: Optional[Any] = None
    remote_youtube_channel_id: Optional[str] = None


class youtube_channels_on_conflict(BaseModel):
    constraint: youtube_channels_constraint
    update_columns: List[youtube_channels_update_column] = Field(
        default_factory=lambda: []
    )
    where: Optional["youtube_channels_bool_exp"] = None


class youtube_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    enabled: Optional[order_by] = None
    id: Optional[order_by] = None
    last_fetched_at: Optional[order_by] = None
    registered_at: Optional[order_by] = None
    remote_youtube_channel_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class youtube_channels_pk_columns_input(BaseModel):
    id: Any


class youtube_channels_set_input(BaseModel):
    enabled: Optional[bool] = None
    last_fetched_at: Optional[Any] = None
    registered_at: Optional[Any] = None


class youtube_channels_stream_cursor_input(BaseModel):
    initial_value: "youtube_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    enabled: Optional[bool] = None
    id: Optional[Any] = None
    last_fetched_at: Optional[Any] = None
    registered_at: Optional[Any] = None
    remote_youtube_channel_id: Optional[str] = None
    updated_at: Optional[Any] = None


class youtube_channels_updates(BaseModel):
    set: Optional["youtube_channels_set_input"] = Field(alias="_set", default=None)
    where: "youtube_channels_bool_exp"
