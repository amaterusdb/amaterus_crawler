schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

"""mutation root"""
type mutation_root {
  """
  insert data into the table: "youtube_channel_detail_logs"
  """
  insert_youtube_channel_detail_logs(
    """the rows to be inserted"""
    objects: [youtube_channel_detail_logs_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channel_detail_logs_on_conflict
  ): youtube_channel_detail_logs_mutation_response

  """
  insert a single row into the table: "youtube_channel_detail_logs"
  """
  insert_youtube_channel_detail_logs_one(
    """the row to be inserted"""
    object: youtube_channel_detail_logs_insert_input!

    """upsert condition"""
    on_conflict: youtube_channel_detail_logs_on_conflict
  ): youtube_channel_detail_logs

  """
  insert data into the table: "youtube_channel_detail_thumbnails"
  """
  insert_youtube_channel_detail_thumbnails(
    """the rows to be inserted"""
    objects: [youtube_channel_detail_thumbnails_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channel_detail_thumbnails_on_conflict
  ): youtube_channel_detail_thumbnails_mutation_response

  """
  insert a single row into the table: "youtube_channel_detail_thumbnails"
  """
  insert_youtube_channel_detail_thumbnails_one(
    """the row to be inserted"""
    object: youtube_channel_detail_thumbnails_insert_input!

    """upsert condition"""
    on_conflict: youtube_channel_detail_thumbnails_on_conflict
  ): youtube_channel_detail_thumbnails

  """
  insert data into the table: "youtube_channel_details"
  """
  insert_youtube_channel_details(
    """the rows to be inserted"""
    objects: [youtube_channel_details_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channel_details_on_conflict
  ): youtube_channel_details_mutation_response

  """
  insert a single row into the table: "youtube_channel_details"
  """
  insert_youtube_channel_details_one(
    """the row to be inserted"""
    object: youtube_channel_details_insert_input!

    """upsert condition"""
    on_conflict: youtube_channel_details_on_conflict
  ): youtube_channel_details

  """
  insert data into the table: "youtube_channel_thumbnail_objects"
  """
  insert_youtube_channel_thumbnail_objects(
    """the rows to be inserted"""
    objects: [youtube_channel_thumbnail_objects_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channel_thumbnail_objects_on_conflict
  ): youtube_channel_thumbnail_objects_mutation_response

  """
  insert a single row into the table: "youtube_channel_thumbnail_objects"
  """
  insert_youtube_channel_thumbnail_objects_one(
    """the row to be inserted"""
    object: youtube_channel_thumbnail_objects_insert_input!

    """upsert condition"""
    on_conflict: youtube_channel_thumbnail_objects_on_conflict
  ): youtube_channel_thumbnail_objects

  """
  insert data into the table: "youtube_channel_thumbnails"
  """
  insert_youtube_channel_thumbnails(
    """the rows to be inserted"""
    objects: [youtube_channel_thumbnails_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channel_thumbnails_on_conflict
  ): youtube_channel_thumbnails_mutation_response

  """
  insert a single row into the table: "youtube_channel_thumbnails"
  """
  insert_youtube_channel_thumbnails_one(
    """the row to be inserted"""
    object: youtube_channel_thumbnails_insert_input!

    """upsert condition"""
    on_conflict: youtube_channel_thumbnails_on_conflict
  ): youtube_channel_thumbnails

  """
  insert data into the table: "youtube_channels"
  """
  insert_youtube_channels(
    """the rows to be inserted"""
    objects: [youtube_channels_insert_input!]!

    """upsert condition"""
    on_conflict: youtube_channels_on_conflict
  ): youtube_channels_mutation_response

  """
  insert a single row into the table: "youtube_channels"
  """
  insert_youtube_channels_one(
    """the row to be inserted"""
    object: youtube_channels_insert_input!

    """upsert condition"""
    on_conflict: youtube_channels_on_conflict
  ): youtube_channels

  """
  update data of the table: "youtube_channel_details"
  """
  update_youtube_channel_details(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channel_details_set_input

    """filter the rows which have to be updated"""
    where: youtube_channel_details_bool_exp!
  ): youtube_channel_details_mutation_response

  """
  update single row of the table: "youtube_channel_details"
  """
  update_youtube_channel_details_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channel_details_set_input
    pk_columns: youtube_channel_details_pk_columns_input!
  ): youtube_channel_details

  """
  update multiples rows of table: "youtube_channel_details"
  """
  update_youtube_channel_details_many(
    """updates to execute, in order"""
    updates: [youtube_channel_details_updates!]!
  ): [youtube_channel_details_mutation_response]

  """
  update data of the table: "youtube_channel_thumbnails"
  """
  update_youtube_channel_thumbnails(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channel_thumbnails_set_input

    """filter the rows which have to be updated"""
    where: youtube_channel_thumbnails_bool_exp!
  ): youtube_channel_thumbnails_mutation_response

  """
  update single row of the table: "youtube_channel_thumbnails"
  """
  update_youtube_channel_thumbnails_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channel_thumbnails_set_input
    pk_columns: youtube_channel_thumbnails_pk_columns_input!
  ): youtube_channel_thumbnails

  """
  update multiples rows of table: "youtube_channel_thumbnails"
  """
  update_youtube_channel_thumbnails_many(
    """updates to execute, in order"""
    updates: [youtube_channel_thumbnails_updates!]!
  ): [youtube_channel_thumbnails_mutation_response]

  """
  update data of the table: "youtube_channels"
  """
  update_youtube_channels(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channels_set_input

    """filter the rows which have to be updated"""
    where: youtube_channels_bool_exp!
  ): youtube_channels_mutation_response

  """
  update single row of the table: "youtube_channels"
  """
  update_youtube_channels_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: youtube_channels_set_input
    pk_columns: youtube_channels_pk_columns_input!
  ): youtube_channels

  """
  update multiples rows of table: "youtube_channels"
  """
  update_youtube_channels_many(
    """updates to execute, in order"""
    updates: [youtube_channels_updates!]!
  ): [youtube_channels_mutation_response]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """An array relationship"""
  youtube_channel_detail_logs(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): [youtube_channel_detail_logs!]!

  """An aggregate relationship"""
  youtube_channel_detail_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): youtube_channel_detail_logs_aggregate!

  """
  fetch data from the table: "youtube_channel_detail_logs" using primary key columns
  """
  youtube_channel_detail_logs_by_pk(id: uuid!): youtube_channel_detail_logs

  """An array relationship"""
  youtube_channel_detail_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): [youtube_channel_detail_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_detail_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): youtube_channel_detail_thumbnails_aggregate!

  """
  fetch data from the table: "youtube_channel_detail_thumbnails" using primary key columns
  """
  youtube_channel_detail_thumbnails_by_pk(id: uuid!): youtube_channel_detail_thumbnails

  """An array relationship"""
  youtube_channel_details(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): [youtube_channel_details!]!

  """An aggregate relationship"""
  youtube_channel_details_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): youtube_channel_details_aggregate!

  """
  fetch data from the table: "youtube_channel_details" using primary key columns
  """
  youtube_channel_details_by_pk(id: uuid!): youtube_channel_details

  """
  fetch data from the table: "youtube_channel_thumbnail_objects"
  """
  youtube_channel_thumbnail_objects(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnail_objects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnail_objects_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnail_objects_bool_exp
  ): [youtube_channel_thumbnail_objects!]!

  """
  fetch aggregated fields from the table: "youtube_channel_thumbnail_objects"
  """
  youtube_channel_thumbnail_objects_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnail_objects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnail_objects_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnail_objects_bool_exp
  ): youtube_channel_thumbnail_objects_aggregate!

  """
  fetch data from the table: "youtube_channel_thumbnail_objects" using primary key columns
  """
  youtube_channel_thumbnail_objects_by_pk(id: uuid!): youtube_channel_thumbnail_objects

  """An array relationship"""
  youtube_channel_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): [youtube_channel_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): youtube_channel_thumbnails_aggregate!

  """
  fetch data from the table: "youtube_channel_thumbnails" using primary key columns
  """
  youtube_channel_thumbnails_by_pk(id: uuid!): youtube_channel_thumbnails

  """
  fetch data from the table: "youtube_channels"
  """
  youtube_channels(
    """distinct select on columns"""
    distinct_on: [youtube_channels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channels_order_by!]

    """filter the rows returned"""
    where: youtube_channels_bool_exp
  ): [youtube_channels!]!

  """
  fetch aggregated fields from the table: "youtube_channels"
  """
  youtube_channels_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channels_order_by!]

    """filter the rows returned"""
    where: youtube_channels_bool_exp
  ): youtube_channels_aggregate!

  """
  fetch data from the table: "youtube_channels" using primary key columns
  """
  youtube_channels_by_pk(id: uuid!): youtube_channels
}

type subscription_root {
  """An array relationship"""
  youtube_channel_detail_logs(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): [youtube_channel_detail_logs!]!

  """An aggregate relationship"""
  youtube_channel_detail_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): youtube_channel_detail_logs_aggregate!

  """
  fetch data from the table: "youtube_channel_detail_logs" using primary key columns
  """
  youtube_channel_detail_logs_by_pk(id: uuid!): youtube_channel_detail_logs

  """
  fetch data from the table in a streaming manner: "youtube_channel_detail_logs"
  """
  youtube_channel_detail_logs_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channel_detail_logs_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): [youtube_channel_detail_logs!]!

  """An array relationship"""
  youtube_channel_detail_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): [youtube_channel_detail_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_detail_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): youtube_channel_detail_thumbnails_aggregate!

  """
  fetch data from the table: "youtube_channel_detail_thumbnails" using primary key columns
  """
  youtube_channel_detail_thumbnails_by_pk(id: uuid!): youtube_channel_detail_thumbnails

  """
  fetch data from the table in a streaming manner: "youtube_channel_detail_thumbnails"
  """
  youtube_channel_detail_thumbnails_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channel_detail_thumbnails_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): [youtube_channel_detail_thumbnails!]!

  """An array relationship"""
  youtube_channel_details(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): [youtube_channel_details!]!

  """An aggregate relationship"""
  youtube_channel_details_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): youtube_channel_details_aggregate!

  """
  fetch data from the table: "youtube_channel_details" using primary key columns
  """
  youtube_channel_details_by_pk(id: uuid!): youtube_channel_details

  """
  fetch data from the table in a streaming manner: "youtube_channel_details"
  """
  youtube_channel_details_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channel_details_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): [youtube_channel_details!]!

  """
  fetch data from the table: "youtube_channel_thumbnail_objects"
  """
  youtube_channel_thumbnail_objects(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnail_objects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnail_objects_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnail_objects_bool_exp
  ): [youtube_channel_thumbnail_objects!]!

  """
  fetch aggregated fields from the table: "youtube_channel_thumbnail_objects"
  """
  youtube_channel_thumbnail_objects_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnail_objects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnail_objects_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnail_objects_bool_exp
  ): youtube_channel_thumbnail_objects_aggregate!

  """
  fetch data from the table: "youtube_channel_thumbnail_objects" using primary key columns
  """
  youtube_channel_thumbnail_objects_by_pk(id: uuid!): youtube_channel_thumbnail_objects

  """
  fetch data from the table in a streaming manner: "youtube_channel_thumbnail_objects"
  """
  youtube_channel_thumbnail_objects_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channel_thumbnail_objects_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channel_thumbnail_objects_bool_exp
  ): [youtube_channel_thumbnail_objects!]!

  """An array relationship"""
  youtube_channel_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): [youtube_channel_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): youtube_channel_thumbnails_aggregate!

  """
  fetch data from the table: "youtube_channel_thumbnails" using primary key columns
  """
  youtube_channel_thumbnails_by_pk(id: uuid!): youtube_channel_thumbnails

  """
  fetch data from the table in a streaming manner: "youtube_channel_thumbnails"
  """
  youtube_channel_thumbnails_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channel_thumbnails_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): [youtube_channel_thumbnails!]!

  """
  fetch data from the table: "youtube_channels"
  """
  youtube_channels(
    """distinct select on columns"""
    distinct_on: [youtube_channels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channels_order_by!]

    """filter the rows returned"""
    where: youtube_channels_bool_exp
  ): [youtube_channels!]!

  """
  fetch aggregated fields from the table: "youtube_channels"
  """
  youtube_channels_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channels_order_by!]

    """filter the rows returned"""
    where: youtube_channels_bool_exp
  ): youtube_channels_aggregate!

  """
  fetch data from the table: "youtube_channels" using primary key columns
  """
  youtube_channels_by_pk(id: uuid!): youtube_channels

  """
  fetch data from the table in a streaming manner: "youtube_channels"
  """
  youtube_channels_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [youtube_channels_stream_cursor_input]!

    """filter the rows returned"""
    where: youtube_channels_bool_exp
  ): [youtube_channels!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

"""
columns and relationships of "youtube_channel_detail_logs"
"""
type youtube_channel_detail_logs {
  created_at: timestamptz!
  fetched_at: timestamptz!
  id: uuid!
  updated_at: timestamptz!

  """An object relationship"""
  youtube_channel_detail: youtube_channel_details!
  youtube_channel_detail_id: uuid!
}

"""
aggregated selection of "youtube_channel_detail_logs"
"""
type youtube_channel_detail_logs_aggregate {
  aggregate: youtube_channel_detail_logs_aggregate_fields
  nodes: [youtube_channel_detail_logs!]!
}

input youtube_channel_detail_logs_aggregate_bool_exp {
  count: youtube_channel_detail_logs_aggregate_bool_exp_count
}

input youtube_channel_detail_logs_aggregate_bool_exp_count {
  arguments: [youtube_channel_detail_logs_select_column!]
  distinct: Boolean
  filter: youtube_channel_detail_logs_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "youtube_channel_detail_logs"
"""
type youtube_channel_detail_logs_aggregate_fields {
  count(columns: [youtube_channel_detail_logs_select_column!], distinct: Boolean): Int!
  max: youtube_channel_detail_logs_max_fields
  min: youtube_channel_detail_logs_min_fields
}

"""
order by aggregate values of table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_aggregate_order_by {
  count: order_by
  max: youtube_channel_detail_logs_max_order_by
  min: youtube_channel_detail_logs_min_order_by
}

"""
input type for inserting array relation for remote table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_arr_rel_insert_input {
  data: [youtube_channel_detail_logs_insert_input!]!

  """upsert condition"""
  on_conflict: youtube_channel_detail_logs_on_conflict
}

"""
Boolean expression to filter rows from the table "youtube_channel_detail_logs". All fields are combined with a logical 'AND'.
"""
input youtube_channel_detail_logs_bool_exp {
  _and: [youtube_channel_detail_logs_bool_exp!]
  _not: youtube_channel_detail_logs_bool_exp
  _or: [youtube_channel_detail_logs_bool_exp!]
  created_at: timestamptz_comparison_exp
  fetched_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  youtube_channel_detail: youtube_channel_details_bool_exp
  youtube_channel_detail_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "youtube_channel_detail_logs"
"""
enum youtube_channel_detail_logs_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channel_detail_logs_pkey
}

"""
input type for inserting data into table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_insert_input {
  fetched_at: timestamptz
  youtube_channel_detail: youtube_channel_details_obj_rel_insert_input
  youtube_channel_detail_id: uuid
}

"""aggregate max on columns"""
type youtube_channel_detail_logs_max_fields {
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
}

"""
order by max() on columns of table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_max_order_by {
  created_at: order_by
  fetched_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail_id: order_by
}

"""aggregate min on columns"""
type youtube_channel_detail_logs_min_fields {
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
}

"""
order by min() on columns of table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_min_order_by {
  created_at: order_by
  fetched_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail_id: order_by
}

"""
response of any mutation on the table "youtube_channel_detail_logs"
"""
type youtube_channel_detail_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channel_detail_logs!]!
}

"""
on_conflict condition type for table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_on_conflict {
  constraint: youtube_channel_detail_logs_constraint!
  update_columns: [youtube_channel_detail_logs_update_column!]! = []
  where: youtube_channel_detail_logs_bool_exp
}

"""
Ordering options when selecting data from "youtube_channel_detail_logs".
"""
input youtube_channel_detail_logs_order_by {
  created_at: order_by
  fetched_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail: youtube_channel_details_order_by
  youtube_channel_detail_id: order_by
}

"""
select columns of table "youtube_channel_detail_logs"
"""
enum youtube_channel_detail_logs_select_column {
  """column name"""
  created_at

  """column name"""
  fetched_at

  """column name"""
  id

  """column name"""
  updated_at

  """column name"""
  youtube_channel_detail_id
}

"""
Streaming cursor of the table "youtube_channel_detail_logs"
"""
input youtube_channel_detail_logs_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channel_detail_logs_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channel_detail_logs_stream_cursor_value_input {
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
}

"""
placeholder for update columns of table "youtube_channel_detail_logs" (current role has no relevant permissions)
"""
enum youtube_channel_detail_logs_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
columns and relationships of "youtube_channel_detail_thumbnails"
"""
type youtube_channel_detail_thumbnails {
  created_at: timestamptz!
  id: uuid!
  updated_at: timestamptz!

  """An object relationship"""
  youtube_channel_detail: youtube_channel_details!
  youtube_channel_detail_id: uuid!

  """An object relationship"""
  youtube_channel_thumbnail: youtube_channel_thumbnails!
  youtube_channel_thumbnail_id: uuid!
}

"""
aggregated selection of "youtube_channel_detail_thumbnails"
"""
type youtube_channel_detail_thumbnails_aggregate {
  aggregate: youtube_channel_detail_thumbnails_aggregate_fields
  nodes: [youtube_channel_detail_thumbnails!]!
}

input youtube_channel_detail_thumbnails_aggregate_bool_exp {
  count: youtube_channel_detail_thumbnails_aggregate_bool_exp_count
}

input youtube_channel_detail_thumbnails_aggregate_bool_exp_count {
  arguments: [youtube_channel_detail_thumbnails_select_column!]
  distinct: Boolean
  filter: youtube_channel_detail_thumbnails_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "youtube_channel_detail_thumbnails"
"""
type youtube_channel_detail_thumbnails_aggregate_fields {
  count(columns: [youtube_channel_detail_thumbnails_select_column!], distinct: Boolean): Int!
  max: youtube_channel_detail_thumbnails_max_fields
  min: youtube_channel_detail_thumbnails_min_fields
}

"""
order by aggregate values of table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_aggregate_order_by {
  count: order_by
  max: youtube_channel_detail_thumbnails_max_order_by
  min: youtube_channel_detail_thumbnails_min_order_by
}

"""
input type for inserting array relation for remote table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_arr_rel_insert_input {
  data: [youtube_channel_detail_thumbnails_insert_input!]!

  """upsert condition"""
  on_conflict: youtube_channel_detail_thumbnails_on_conflict
}

"""
Boolean expression to filter rows from the table "youtube_channel_detail_thumbnails". All fields are combined with a logical 'AND'.
"""
input youtube_channel_detail_thumbnails_bool_exp {
  _and: [youtube_channel_detail_thumbnails_bool_exp!]
  _not: youtube_channel_detail_thumbnails_bool_exp
  _or: [youtube_channel_detail_thumbnails_bool_exp!]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  youtube_channel_detail: youtube_channel_details_bool_exp
  youtube_channel_detail_id: uuid_comparison_exp
  youtube_channel_thumbnail: youtube_channel_thumbnails_bool_exp
  youtube_channel_thumbnail_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "youtube_channel_detail_thumbnails"
"""
enum youtube_channel_detail_thumbnails_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channel_detail_thumbnails_pkey

  """
  unique or primary key constraint on columns "youtube_channel_thumbnail_id", "youtube_channel_detail_id"
  """
  youtube_channel_detail_thumbnails_youtube_channel_detail_id_you
}

"""
input type for inserting data into table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_insert_input {
  youtube_channel_detail: youtube_channel_details_obj_rel_insert_input
  youtube_channel_detail_id: uuid
  youtube_channel_thumbnail: youtube_channel_thumbnails_obj_rel_insert_input
  youtube_channel_thumbnail_id: uuid
}

"""aggregate max on columns"""
type youtube_channel_detail_thumbnails_max_fields {
  created_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
  youtube_channel_thumbnail_id: uuid
}

"""
order by max() on columns of table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_max_order_by {
  created_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail_id: order_by
  youtube_channel_thumbnail_id: order_by
}

"""aggregate min on columns"""
type youtube_channel_detail_thumbnails_min_fields {
  created_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
  youtube_channel_thumbnail_id: uuid
}

"""
order by min() on columns of table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_min_order_by {
  created_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail_id: order_by
  youtube_channel_thumbnail_id: order_by
}

"""
response of any mutation on the table "youtube_channel_detail_thumbnails"
"""
type youtube_channel_detail_thumbnails_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channel_detail_thumbnails!]!
}

"""
on_conflict condition type for table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_on_conflict {
  constraint: youtube_channel_detail_thumbnails_constraint!
  update_columns: [youtube_channel_detail_thumbnails_update_column!]! = []
  where: youtube_channel_detail_thumbnails_bool_exp
}

"""
Ordering options when selecting data from "youtube_channel_detail_thumbnails".
"""
input youtube_channel_detail_thumbnails_order_by {
  created_at: order_by
  id: order_by
  updated_at: order_by
  youtube_channel_detail: youtube_channel_details_order_by
  youtube_channel_detail_id: order_by
  youtube_channel_thumbnail: youtube_channel_thumbnails_order_by
  youtube_channel_thumbnail_id: order_by
}

"""
select columns of table "youtube_channel_detail_thumbnails"
"""
enum youtube_channel_detail_thumbnails_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  updated_at

  """column name"""
  youtube_channel_detail_id

  """column name"""
  youtube_channel_thumbnail_id
}

"""
Streaming cursor of the table "youtube_channel_detail_thumbnails"
"""
input youtube_channel_detail_thumbnails_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channel_detail_thumbnails_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channel_detail_thumbnails_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  updated_at: timestamptz
  youtube_channel_detail_id: uuid
  youtube_channel_thumbnail_id: uuid
}

"""
placeholder for update columns of table "youtube_channel_detail_thumbnails" (current role has no relevant permissions)
"""
enum youtube_channel_detail_thumbnails_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
columns and relationships of "youtube_channel_details"
"""
type youtube_channel_details {
  created_at: timestamptz!
  custom_url: String
  description: String!
  id: uuid!
  last_fetched_at: timestamptz!
  published_at: timestamptz!
  remote_youtube_channel_id: String!
  title: String!
  updated_at: timestamptz!

  """An object relationship"""
  youtube_channel: youtube_channels!

  """An array relationship"""
  youtube_channel_detail_logs(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): [youtube_channel_detail_logs!]!

  """An aggregate relationship"""
  youtube_channel_detail_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_logs_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_logs_bool_exp
  ): youtube_channel_detail_logs_aggregate!

  """An array relationship"""
  youtube_channel_detail_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): [youtube_channel_detail_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_detail_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): youtube_channel_detail_thumbnails_aggregate!
}

"""
aggregated selection of "youtube_channel_details"
"""
type youtube_channel_details_aggregate {
  aggregate: youtube_channel_details_aggregate_fields
  nodes: [youtube_channel_details!]!
}

input youtube_channel_details_aggregate_bool_exp {
  count: youtube_channel_details_aggregate_bool_exp_count
}

input youtube_channel_details_aggregate_bool_exp_count {
  arguments: [youtube_channel_details_select_column!]
  distinct: Boolean
  filter: youtube_channel_details_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "youtube_channel_details"
"""
type youtube_channel_details_aggregate_fields {
  count(columns: [youtube_channel_details_select_column!], distinct: Boolean): Int!
  max: youtube_channel_details_max_fields
  min: youtube_channel_details_min_fields
}

"""
order by aggregate values of table "youtube_channel_details"
"""
input youtube_channel_details_aggregate_order_by {
  count: order_by
  max: youtube_channel_details_max_order_by
  min: youtube_channel_details_min_order_by
}

"""
input type for inserting array relation for remote table "youtube_channel_details"
"""
input youtube_channel_details_arr_rel_insert_input {
  data: [youtube_channel_details_insert_input!]!

  """upsert condition"""
  on_conflict: youtube_channel_details_on_conflict
}

"""
Boolean expression to filter rows from the table "youtube_channel_details". All fields are combined with a logical 'AND'.
"""
input youtube_channel_details_bool_exp {
  _and: [youtube_channel_details_bool_exp!]
  _not: youtube_channel_details_bool_exp
  _or: [youtube_channel_details_bool_exp!]
  created_at: timestamptz_comparison_exp
  custom_url: String_comparison_exp
  description: String_comparison_exp
  id: uuid_comparison_exp
  last_fetched_at: timestamptz_comparison_exp
  published_at: timestamptz_comparison_exp
  remote_youtube_channel_id: String_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  youtube_channel: youtube_channels_bool_exp
  youtube_channel_detail_logs: youtube_channel_detail_logs_bool_exp
  youtube_channel_detail_logs_aggregate: youtube_channel_detail_logs_aggregate_bool_exp
  youtube_channel_detail_thumbnails: youtube_channel_detail_thumbnails_bool_exp
  youtube_channel_detail_thumbnails_aggregate: youtube_channel_detail_thumbnails_aggregate_bool_exp
}

"""
unique or primary key constraints on table "youtube_channel_details"
"""
enum youtube_channel_details_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channel_details_pkey

  """
  unique or primary key constraint on columns "published_at", "custom_url", "description", "remote_youtube_channel_id", "title"
  """
  youtube_channel_details_remote_youtube_channel_id_title_descrip
}

"""
input type for inserting data into table "youtube_channel_details"
"""
input youtube_channel_details_insert_input {
  custom_url: String
  description: String
  last_fetched_at: timestamptz
  published_at: timestamptz
  remote_youtube_channel_id: String
  title: String
  youtube_channel: youtube_channels_obj_rel_insert_input
  youtube_channel_detail_logs: youtube_channel_detail_logs_arr_rel_insert_input
  youtube_channel_detail_thumbnails: youtube_channel_detail_thumbnails_arr_rel_insert_input
}

"""aggregate max on columns"""
type youtube_channel_details_max_fields {
  created_at: timestamptz
  custom_url: String
  description: String
  id: uuid
  last_fetched_at: timestamptz
  published_at: timestamptz
  remote_youtube_channel_id: String
  title: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "youtube_channel_details"
"""
input youtube_channel_details_max_order_by {
  created_at: order_by
  custom_url: order_by
  description: order_by
  id: order_by
  last_fetched_at: order_by
  published_at: order_by
  remote_youtube_channel_id: order_by
  title: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type youtube_channel_details_min_fields {
  created_at: timestamptz
  custom_url: String
  description: String
  id: uuid
  last_fetched_at: timestamptz
  published_at: timestamptz
  remote_youtube_channel_id: String
  title: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "youtube_channel_details"
"""
input youtube_channel_details_min_order_by {
  created_at: order_by
  custom_url: order_by
  description: order_by
  id: order_by
  last_fetched_at: order_by
  published_at: order_by
  remote_youtube_channel_id: order_by
  title: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "youtube_channel_details"
"""
type youtube_channel_details_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channel_details!]!
}

"""
input type for inserting object relation for remote table "youtube_channel_details"
"""
input youtube_channel_details_obj_rel_insert_input {
  data: youtube_channel_details_insert_input!

  """upsert condition"""
  on_conflict: youtube_channel_details_on_conflict
}

"""
on_conflict condition type for table "youtube_channel_details"
"""
input youtube_channel_details_on_conflict {
  constraint: youtube_channel_details_constraint!
  update_columns: [youtube_channel_details_update_column!]! = []
  where: youtube_channel_details_bool_exp
}

"""Ordering options when selecting data from "youtube_channel_details"."""
input youtube_channel_details_order_by {
  created_at: order_by
  custom_url: order_by
  description: order_by
  id: order_by
  last_fetched_at: order_by
  published_at: order_by
  remote_youtube_channel_id: order_by
  title: order_by
  updated_at: order_by
  youtube_channel: youtube_channels_order_by
  youtube_channel_detail_logs_aggregate: youtube_channel_detail_logs_aggregate_order_by
  youtube_channel_detail_thumbnails_aggregate: youtube_channel_detail_thumbnails_aggregate_order_by
}

"""primary key columns input for table: youtube_channel_details"""
input youtube_channel_details_pk_columns_input {
  id: uuid!
}

"""
select columns of table "youtube_channel_details"
"""
enum youtube_channel_details_select_column {
  """column name"""
  created_at

  """column name"""
  custom_url

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_fetched_at

  """column name"""
  published_at

  """column name"""
  remote_youtube_channel_id

  """column name"""
  title

  """column name"""
  updated_at
}

"""
input type for updating data in table "youtube_channel_details"
"""
input youtube_channel_details_set_input {
  last_fetched_at: timestamptz
}

"""
Streaming cursor of the table "youtube_channel_details"
"""
input youtube_channel_details_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channel_details_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channel_details_stream_cursor_value_input {
  created_at: timestamptz
  custom_url: String
  description: String
  id: uuid
  last_fetched_at: timestamptz
  published_at: timestamptz
  remote_youtube_channel_id: String
  title: String
  updated_at: timestamptz
}

"""
update columns of table "youtube_channel_details"
"""
enum youtube_channel_details_update_column {
  """column name"""
  last_fetched_at
}

input youtube_channel_details_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: youtube_channel_details_set_input

  """filter the rows which have to be updated"""
  where: youtube_channel_details_bool_exp!
}

"""
columns and relationships of "youtube_channel_thumbnail_objects"
"""
type youtube_channel_thumbnail_objects {
  content_type: String!
  created_at: timestamptz!
  fetched_at: timestamptz!
  id: uuid!
  object_key: String!
  object_size: Int!
  remote_youtube_channel_thumbnail_url: String!
  sha256_digest: String!
  updated_at: timestamptz!

  """An array relationship"""
  youtube_channel_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): [youtube_channel_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): youtube_channel_thumbnails_aggregate!
}

"""
aggregated selection of "youtube_channel_thumbnail_objects"
"""
type youtube_channel_thumbnail_objects_aggregate {
  aggregate: youtube_channel_thumbnail_objects_aggregate_fields
  nodes: [youtube_channel_thumbnail_objects!]!
}

"""
aggregate fields of "youtube_channel_thumbnail_objects"
"""
type youtube_channel_thumbnail_objects_aggregate_fields {
  avg: youtube_channel_thumbnail_objects_avg_fields
  count(columns: [youtube_channel_thumbnail_objects_select_column!], distinct: Boolean): Int!
  max: youtube_channel_thumbnail_objects_max_fields
  min: youtube_channel_thumbnail_objects_min_fields
  stddev: youtube_channel_thumbnail_objects_stddev_fields
  stddev_pop: youtube_channel_thumbnail_objects_stddev_pop_fields
  stddev_samp: youtube_channel_thumbnail_objects_stddev_samp_fields
  sum: youtube_channel_thumbnail_objects_sum_fields
  var_pop: youtube_channel_thumbnail_objects_var_pop_fields
  var_samp: youtube_channel_thumbnail_objects_var_samp_fields
  variance: youtube_channel_thumbnail_objects_variance_fields
}

"""aggregate avg on columns"""
type youtube_channel_thumbnail_objects_avg_fields {
  object_size: Float
}

"""
Boolean expression to filter rows from the table "youtube_channel_thumbnail_objects". All fields are combined with a logical 'AND'.
"""
input youtube_channel_thumbnail_objects_bool_exp {
  _and: [youtube_channel_thumbnail_objects_bool_exp!]
  _not: youtube_channel_thumbnail_objects_bool_exp
  _or: [youtube_channel_thumbnail_objects_bool_exp!]
  content_type: String_comparison_exp
  created_at: timestamptz_comparison_exp
  fetched_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  object_key: String_comparison_exp
  object_size: Int_comparison_exp
  remote_youtube_channel_thumbnail_url: String_comparison_exp
  sha256_digest: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  youtube_channel_thumbnails: youtube_channel_thumbnails_bool_exp
  youtube_channel_thumbnails_aggregate: youtube_channel_thumbnails_aggregate_bool_exp
}

"""
unique or primary key constraints on table "youtube_channel_thumbnail_objects"
"""
enum youtube_channel_thumbnail_objects_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channel_thumbnail_objects_pkey

  """
  unique or primary key constraint on columns "remote_youtube_channel_thumbnail_url"
  """
  youtube_channel_thumbnail_objects_remote_youtube_channel_thumbn
}

"""
input type for inserting data into table "youtube_channel_thumbnail_objects"
"""
input youtube_channel_thumbnail_objects_insert_input {
  content_type: String
  fetched_at: timestamptz
  object_key: String
  object_size: Int
  remote_youtube_channel_thumbnail_url: String
  sha256_digest: String
  youtube_channel_thumbnails: youtube_channel_thumbnails_arr_rel_insert_input
}

"""aggregate max on columns"""
type youtube_channel_thumbnail_objects_max_fields {
  content_type: String
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  object_key: String
  object_size: Int
  remote_youtube_channel_thumbnail_url: String
  sha256_digest: String
  updated_at: timestamptz
}

"""aggregate min on columns"""
type youtube_channel_thumbnail_objects_min_fields {
  content_type: String
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  object_key: String
  object_size: Int
  remote_youtube_channel_thumbnail_url: String
  sha256_digest: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "youtube_channel_thumbnail_objects"
"""
type youtube_channel_thumbnail_objects_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channel_thumbnail_objects!]!
}

"""
input type for inserting object relation for remote table "youtube_channel_thumbnail_objects"
"""
input youtube_channel_thumbnail_objects_obj_rel_insert_input {
  data: youtube_channel_thumbnail_objects_insert_input!

  """upsert condition"""
  on_conflict: youtube_channel_thumbnail_objects_on_conflict
}

"""
on_conflict condition type for table "youtube_channel_thumbnail_objects"
"""
input youtube_channel_thumbnail_objects_on_conflict {
  constraint: youtube_channel_thumbnail_objects_constraint!
  update_columns: [youtube_channel_thumbnail_objects_update_column!]! = []
  where: youtube_channel_thumbnail_objects_bool_exp
}

"""
Ordering options when selecting data from "youtube_channel_thumbnail_objects".
"""
input youtube_channel_thumbnail_objects_order_by {
  content_type: order_by
  created_at: order_by
  fetched_at: order_by
  id: order_by
  object_key: order_by
  object_size: order_by
  remote_youtube_channel_thumbnail_url: order_by
  sha256_digest: order_by
  updated_at: order_by
  youtube_channel_thumbnails_aggregate: youtube_channel_thumbnails_aggregate_order_by
}

"""
select columns of table "youtube_channel_thumbnail_objects"
"""
enum youtube_channel_thumbnail_objects_select_column {
  """column name"""
  content_type

  """column name"""
  created_at

  """column name"""
  fetched_at

  """column name"""
  id

  """column name"""
  object_key

  """column name"""
  object_size

  """column name"""
  remote_youtube_channel_thumbnail_url

  """column name"""
  sha256_digest

  """column name"""
  updated_at
}

"""aggregate stddev on columns"""
type youtube_channel_thumbnail_objects_stddev_fields {
  object_size: Float
}

"""aggregate stddev_pop on columns"""
type youtube_channel_thumbnail_objects_stddev_pop_fields {
  object_size: Float
}

"""aggregate stddev_samp on columns"""
type youtube_channel_thumbnail_objects_stddev_samp_fields {
  object_size: Float
}

"""
Streaming cursor of the table "youtube_channel_thumbnail_objects"
"""
input youtube_channel_thumbnail_objects_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channel_thumbnail_objects_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channel_thumbnail_objects_stream_cursor_value_input {
  content_type: String
  created_at: timestamptz
  fetched_at: timestamptz
  id: uuid
  object_key: String
  object_size: Int
  remote_youtube_channel_thumbnail_url: String
  sha256_digest: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type youtube_channel_thumbnail_objects_sum_fields {
  object_size: Int
}

"""
placeholder for update columns of table "youtube_channel_thumbnail_objects" (current role has no relevant permissions)
"""
enum youtube_channel_thumbnail_objects_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""aggregate var_pop on columns"""
type youtube_channel_thumbnail_objects_var_pop_fields {
  object_size: Float
}

"""aggregate var_samp on columns"""
type youtube_channel_thumbnail_objects_var_samp_fields {
  object_size: Float
}

"""aggregate variance on columns"""
type youtube_channel_thumbnail_objects_variance_fields {
  object_size: Float
}

"""
columns and relationships of "youtube_channel_thumbnails"
"""
type youtube_channel_thumbnails {
  created_at: timestamptz!
  height: Int!
  id: uuid!
  key: String!
  last_fetched_at: timestamptz!
  remote_youtube_channel_id: String!
  updated_at: timestamptz!
  url: String!
  width: Int!

  """An object relationship"""
  youtube_channel: youtube_channels!

  """An array relationship"""
  youtube_channel_detail_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): [youtube_channel_detail_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_detail_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_detail_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_detail_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_detail_thumbnails_bool_exp
  ): youtube_channel_detail_thumbnails_aggregate!

  """An object relationship"""
  youtube_channel_thumbnail_object: youtube_channel_thumbnail_objects
}

"""
aggregated selection of "youtube_channel_thumbnails"
"""
type youtube_channel_thumbnails_aggregate {
  aggregate: youtube_channel_thumbnails_aggregate_fields
  nodes: [youtube_channel_thumbnails!]!
}

input youtube_channel_thumbnails_aggregate_bool_exp {
  count: youtube_channel_thumbnails_aggregate_bool_exp_count
}

input youtube_channel_thumbnails_aggregate_bool_exp_count {
  arguments: [youtube_channel_thumbnails_select_column!]
  distinct: Boolean
  filter: youtube_channel_thumbnails_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "youtube_channel_thumbnails"
"""
type youtube_channel_thumbnails_aggregate_fields {
  avg: youtube_channel_thumbnails_avg_fields
  count(columns: [youtube_channel_thumbnails_select_column!], distinct: Boolean): Int!
  max: youtube_channel_thumbnails_max_fields
  min: youtube_channel_thumbnails_min_fields
  stddev: youtube_channel_thumbnails_stddev_fields
  stddev_pop: youtube_channel_thumbnails_stddev_pop_fields
  stddev_samp: youtube_channel_thumbnails_stddev_samp_fields
  sum: youtube_channel_thumbnails_sum_fields
  var_pop: youtube_channel_thumbnails_var_pop_fields
  var_samp: youtube_channel_thumbnails_var_samp_fields
  variance: youtube_channel_thumbnails_variance_fields
}

"""
order by aggregate values of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_aggregate_order_by {
  avg: youtube_channel_thumbnails_avg_order_by
  count: order_by
  max: youtube_channel_thumbnails_max_order_by
  min: youtube_channel_thumbnails_min_order_by
  stddev: youtube_channel_thumbnails_stddev_order_by
  stddev_pop: youtube_channel_thumbnails_stddev_pop_order_by
  stddev_samp: youtube_channel_thumbnails_stddev_samp_order_by
  sum: youtube_channel_thumbnails_sum_order_by
  var_pop: youtube_channel_thumbnails_var_pop_order_by
  var_samp: youtube_channel_thumbnails_var_samp_order_by
  variance: youtube_channel_thumbnails_variance_order_by
}

"""
input type for inserting array relation for remote table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_arr_rel_insert_input {
  data: [youtube_channel_thumbnails_insert_input!]!

  """upsert condition"""
  on_conflict: youtube_channel_thumbnails_on_conflict
}

"""aggregate avg on columns"""
type youtube_channel_thumbnails_avg_fields {
  height: Float
  width: Float
}

"""
order by avg() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_avg_order_by {
  height: order_by
  width: order_by
}

"""
Boolean expression to filter rows from the table "youtube_channel_thumbnails". All fields are combined with a logical 'AND'.
"""
input youtube_channel_thumbnails_bool_exp {
  _and: [youtube_channel_thumbnails_bool_exp!]
  _not: youtube_channel_thumbnails_bool_exp
  _or: [youtube_channel_thumbnails_bool_exp!]
  created_at: timestamptz_comparison_exp
  height: Int_comparison_exp
  id: uuid_comparison_exp
  key: String_comparison_exp
  last_fetched_at: timestamptz_comparison_exp
  remote_youtube_channel_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  url: String_comparison_exp
  width: Int_comparison_exp
  youtube_channel: youtube_channels_bool_exp
  youtube_channel_detail_thumbnails: youtube_channel_detail_thumbnails_bool_exp
  youtube_channel_detail_thumbnails_aggregate: youtube_channel_detail_thumbnails_aggregate_bool_exp
  youtube_channel_thumbnail_object: youtube_channel_thumbnail_objects_bool_exp
}

"""
unique or primary key constraints on table "youtube_channel_thumbnails"
"""
enum youtube_channel_thumbnails_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channel_thumbnails_pkey

  """
  unique or primary key constraint on columns "key", "width", "remote_youtube_channel_id", "height", "url"
  """
  youtube_channel_thumbnails_remote_youtube_channel_id_key_url_wi
}

"""
input type for inserting data into table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_insert_input {
  height: Int
  key: String
  last_fetched_at: timestamptz
  remote_youtube_channel_id: String
  url: String
  width: Int
  youtube_channel: youtube_channels_obj_rel_insert_input
  youtube_channel_detail_thumbnails: youtube_channel_detail_thumbnails_arr_rel_insert_input
  youtube_channel_thumbnail_object: youtube_channel_thumbnail_objects_obj_rel_insert_input
}

"""aggregate max on columns"""
type youtube_channel_thumbnails_max_fields {
  created_at: timestamptz
  height: Int
  id: uuid
  key: String
  last_fetched_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
  url: String
  width: Int
}

"""
order by max() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_max_order_by {
  created_at: order_by
  height: order_by
  id: order_by
  key: order_by
  last_fetched_at: order_by
  remote_youtube_channel_id: order_by
  updated_at: order_by
  url: order_by
  width: order_by
}

"""aggregate min on columns"""
type youtube_channel_thumbnails_min_fields {
  created_at: timestamptz
  height: Int
  id: uuid
  key: String
  last_fetched_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
  url: String
  width: Int
}

"""
order by min() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_min_order_by {
  created_at: order_by
  height: order_by
  id: order_by
  key: order_by
  last_fetched_at: order_by
  remote_youtube_channel_id: order_by
  updated_at: order_by
  url: order_by
  width: order_by
}

"""
response of any mutation on the table "youtube_channel_thumbnails"
"""
type youtube_channel_thumbnails_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channel_thumbnails!]!
}

"""
input type for inserting object relation for remote table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_obj_rel_insert_input {
  data: youtube_channel_thumbnails_insert_input!

  """upsert condition"""
  on_conflict: youtube_channel_thumbnails_on_conflict
}

"""
on_conflict condition type for table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_on_conflict {
  constraint: youtube_channel_thumbnails_constraint!
  update_columns: [youtube_channel_thumbnails_update_column!]! = []
  where: youtube_channel_thumbnails_bool_exp
}

"""
Ordering options when selecting data from "youtube_channel_thumbnails".
"""
input youtube_channel_thumbnails_order_by {
  created_at: order_by
  height: order_by
  id: order_by
  key: order_by
  last_fetched_at: order_by
  remote_youtube_channel_id: order_by
  updated_at: order_by
  url: order_by
  width: order_by
  youtube_channel: youtube_channels_order_by
  youtube_channel_detail_thumbnails_aggregate: youtube_channel_detail_thumbnails_aggregate_order_by
  youtube_channel_thumbnail_object: youtube_channel_thumbnail_objects_order_by
}

"""primary key columns input for table: youtube_channel_thumbnails"""
input youtube_channel_thumbnails_pk_columns_input {
  id: uuid!
}

"""
select columns of table "youtube_channel_thumbnails"
"""
enum youtube_channel_thumbnails_select_column {
  """column name"""
  created_at

  """column name"""
  height

  """column name"""
  id

  """column name"""
  key

  """column name"""
  last_fetched_at

  """column name"""
  remote_youtube_channel_id

  """column name"""
  updated_at

  """column name"""
  url

  """column name"""
  width
}

"""
input type for updating data in table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_set_input {
  last_fetched_at: timestamptz
}

"""aggregate stddev on columns"""
type youtube_channel_thumbnails_stddev_fields {
  height: Float
  width: Float
}

"""
order by stddev() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_stddev_order_by {
  height: order_by
  width: order_by
}

"""aggregate stddev_pop on columns"""
type youtube_channel_thumbnails_stddev_pop_fields {
  height: Float
  width: Float
}

"""
order by stddev_pop() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_stddev_pop_order_by {
  height: order_by
  width: order_by
}

"""aggregate stddev_samp on columns"""
type youtube_channel_thumbnails_stddev_samp_fields {
  height: Float
  width: Float
}

"""
order by stddev_samp() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_stddev_samp_order_by {
  height: order_by
  width: order_by
}

"""
Streaming cursor of the table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channel_thumbnails_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channel_thumbnails_stream_cursor_value_input {
  created_at: timestamptz
  height: Int
  id: uuid
  key: String
  last_fetched_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
  url: String
  width: Int
}

"""aggregate sum on columns"""
type youtube_channel_thumbnails_sum_fields {
  height: Int
  width: Int
}

"""
order by sum() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_sum_order_by {
  height: order_by
  width: order_by
}

"""
update columns of table "youtube_channel_thumbnails"
"""
enum youtube_channel_thumbnails_update_column {
  """column name"""
  last_fetched_at
}

input youtube_channel_thumbnails_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: youtube_channel_thumbnails_set_input

  """filter the rows which have to be updated"""
  where: youtube_channel_thumbnails_bool_exp!
}

"""aggregate var_pop on columns"""
type youtube_channel_thumbnails_var_pop_fields {
  height: Float
  width: Float
}

"""
order by var_pop() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_var_pop_order_by {
  height: order_by
  width: order_by
}

"""aggregate var_samp on columns"""
type youtube_channel_thumbnails_var_samp_fields {
  height: Float
  width: Float
}

"""
order by var_samp() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_var_samp_order_by {
  height: order_by
  width: order_by
}

"""aggregate variance on columns"""
type youtube_channel_thumbnails_variance_fields {
  height: Float
  width: Float
}

"""
order by variance() on columns of table "youtube_channel_thumbnails"
"""
input youtube_channel_thumbnails_variance_order_by {
  height: order_by
  width: order_by
}

"""
columns and relationships of "youtube_channels"
"""
type youtube_channels {
  created_at: timestamptz!
  enabled: Boolean!
  id: uuid!
  last_fetched_at: timestamptz
  registered_at: timestamptz!
  remote_youtube_channel_id: String!
  updated_at: timestamptz!

  """An array relationship"""
  youtube_channel_details(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): [youtube_channel_details!]!

  """An aggregate relationship"""
  youtube_channel_details_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_details_order_by!]

    """filter the rows returned"""
    where: youtube_channel_details_bool_exp
  ): youtube_channel_details_aggregate!

  """An array relationship"""
  youtube_channel_thumbnails(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): [youtube_channel_thumbnails!]!

  """An aggregate relationship"""
  youtube_channel_thumbnails_aggregate(
    """distinct select on columns"""
    distinct_on: [youtube_channel_thumbnails_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [youtube_channel_thumbnails_order_by!]

    """filter the rows returned"""
    where: youtube_channel_thumbnails_bool_exp
  ): youtube_channel_thumbnails_aggregate!
}

"""
aggregated selection of "youtube_channels"
"""
type youtube_channels_aggregate {
  aggregate: youtube_channels_aggregate_fields
  nodes: [youtube_channels!]!
}

"""
aggregate fields of "youtube_channels"
"""
type youtube_channels_aggregate_fields {
  count(columns: [youtube_channels_select_column!], distinct: Boolean): Int!
  max: youtube_channels_max_fields
  min: youtube_channels_min_fields
}

"""
Boolean expression to filter rows from the table "youtube_channels". All fields are combined with a logical 'AND'.
"""
input youtube_channels_bool_exp {
  _and: [youtube_channels_bool_exp!]
  _not: youtube_channels_bool_exp
  _or: [youtube_channels_bool_exp!]
  created_at: timestamptz_comparison_exp
  enabled: Boolean_comparison_exp
  id: uuid_comparison_exp
  last_fetched_at: timestamptz_comparison_exp
  registered_at: timestamptz_comparison_exp
  remote_youtube_channel_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  youtube_channel_details: youtube_channel_details_bool_exp
  youtube_channel_details_aggregate: youtube_channel_details_aggregate_bool_exp
  youtube_channel_thumbnails: youtube_channel_thumbnails_bool_exp
  youtube_channel_thumbnails_aggregate: youtube_channel_thumbnails_aggregate_bool_exp
}

"""
unique or primary key constraints on table "youtube_channels"
"""
enum youtube_channels_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  youtube_channels_pkey

  """
  unique or primary key constraint on columns "remote_youtube_channel_id"
  """
  youtube_channels_remote_youtube_channel_id_key
}

"""
input type for inserting data into table "youtube_channels"
"""
input youtube_channels_insert_input {
  enabled: Boolean
  last_fetched_at: timestamptz
  registered_at: timestamptz
  remote_youtube_channel_id: String
  youtube_channel_details: youtube_channel_details_arr_rel_insert_input
  youtube_channel_thumbnails: youtube_channel_thumbnails_arr_rel_insert_input
}

"""aggregate max on columns"""
type youtube_channels_max_fields {
  created_at: timestamptz
  id: uuid
  last_fetched_at: timestamptz
  registered_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
}

"""aggregate min on columns"""
type youtube_channels_min_fields {
  created_at: timestamptz
  id: uuid
  last_fetched_at: timestamptz
  registered_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "youtube_channels"
"""
type youtube_channels_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [youtube_channels!]!
}

"""
input type for inserting object relation for remote table "youtube_channels"
"""
input youtube_channels_obj_rel_insert_input {
  data: youtube_channels_insert_input!

  """upsert condition"""
  on_conflict: youtube_channels_on_conflict
}

"""
on_conflict condition type for table "youtube_channels"
"""
input youtube_channels_on_conflict {
  constraint: youtube_channels_constraint!
  update_columns: [youtube_channels_update_column!]! = []
  where: youtube_channels_bool_exp
}

"""Ordering options when selecting data from "youtube_channels"."""
input youtube_channels_order_by {
  created_at: order_by
  enabled: order_by
  id: order_by
  last_fetched_at: order_by
  registered_at: order_by
  remote_youtube_channel_id: order_by
  updated_at: order_by
  youtube_channel_details_aggregate: youtube_channel_details_aggregate_order_by
  youtube_channel_thumbnails_aggregate: youtube_channel_thumbnails_aggregate_order_by
}

"""primary key columns input for table: youtube_channels"""
input youtube_channels_pk_columns_input {
  id: uuid!
}

"""
select columns of table "youtube_channels"
"""
enum youtube_channels_select_column {
  """column name"""
  created_at

  """column name"""
  enabled

  """column name"""
  id

  """column name"""
  last_fetched_at

  """column name"""
  registered_at

  """column name"""
  remote_youtube_channel_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "youtube_channels"
"""
input youtube_channels_set_input {
  enabled: Boolean
  last_fetched_at: timestamptz
  registered_at: timestamptz
}

"""
Streaming cursor of the table "youtube_channels"
"""
input youtube_channels_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: youtube_channels_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input youtube_channels_stream_cursor_value_input {
  created_at: timestamptz
  enabled: Boolean
  id: uuid
  last_fetched_at: timestamptz
  registered_at: timestamptz
  remote_youtube_channel_id: String
  updated_at: timestamptz
}

"""
update columns of table "youtube_channels"
"""
enum youtube_channels_update_column {
  """column name"""
  enabled

  """column name"""
  last_fetched_at

  """column name"""
  registered_at
}

input youtube_channels_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: youtube_channels_set_input

  """filter the rows which have to be updated"""
  where: youtube_channels_bool_exp!
}

